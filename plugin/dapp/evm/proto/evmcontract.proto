syntax = "proto3";

package types;

//
message EVMContractObject {
    string           addr  = 1;
    EVMContractData  data  = 2;
    EVMContractState state = 3;
}

//
message EVMContractData {
    string creator  = 1;
    string name     = 2;
    string alias    = 3;
    string addr     = 4;
    bytes  code     = 5;
    bytes  codeHash = 6;
    //   ABI   ForkEVMABI
    string abi = 7;
}

//
message EVMContractState {
    uint64             nonce       = 1;
    bool               suicided    = 2;
    bytes              storageHash = 3;
    map<string, bytes> storage     = 4;
}

//   /
message EVMContractAction {
    //
    uint64 amount = 1;
    //     ，   Transaction.Fee
    uint64 gasLimit = 2;
    // gas  ，   1
    uint32 gasPrice = 3;
    //
    bytes code = 4;
    //     ，
    string alias = 5;
    //
    string note = 6;
    //            ABI   ForkEVMABI
    string abi = 7;
}

//     /
message ReceiptEVMContract {
    string caller       = 1;
    string contractName = 2;
    string contractAddr = 3;
    uint64 usedGas      = 4;
    //
    bytes ret = 5;
    // json
    string jsonRet = 6;
}

//     EVM
message EVMStateChangeItem {
    string key          = 1;
    bytes  preValue     = 2;
    bytes  currentValue = 3;
}

//
message EVMContractDataCmd {
    string creator  = 1;
    string name     = 2;
    string alias    = 3;
    string addr     = 4;
    string code     = 5;
    string codeHash = 6;
}

//
message EVMContractStateCmd {
    uint64              nonce       = 1;
    bool                suicided    = 2;
    string              storageHash = 3;
    map<string, string> storage     = 4;
}

//     /
message ReceiptEVMContractCmd {
    string caller = 1;
    //
    string contractName = 2;
    string contractAddr = 3;
    uint64 usedGas      = 4;
    //
    string ret = 5;
}

message CheckEVMAddrReq {
    string addr = 1;
}
message CheckEVMAddrResp {
    bool   contract     = 1;
    string contractAddr = 2;
    string contractName = 3;
    string aliasName    = 4;
}

message EstimateEVMGasReq {
    string to     = 1;
    bytes  code   = 2;
    string caller = 3;
    uint64 amount = 4;
    string abi    = 5;
}
message EstimateEVMGasResp {
    uint64 gas = 1;
}

message EvmDebugReq {
    // 0 query, 1 set, -1 clear
    int32 optype = 1;
}

message EvmDebugResp {
    string debugStatus = 1;
}

message EvmQueryAbiReq {
    string address = 1;
}

message EvmQueryAbiResp {
    string address = 1;
    string abi     = 2;
}

message EvmQueryReq {
    string address = 1;
    string input   = 2;
    string caller  = 3;
}

message EvmQueryResp {
    string address  = 1;
    string input    = 2;
    string caller   = 3;
    string rawData  = 4;
    string jsonData = 5;
}

message EvmContractCreateReq {
    string code     = 1;
    int64  fee      = 2;
    string note     = 3;
    string alias    = 4;
    string caller   = 5;
    string abi      = 6;
    string expire   = 7;
    string paraName = 8;
}

message EvmContractCallReq {
    uint64 amount   = 1;
    string code     = 2;
    int64  fee      = 3;
    string note     = 4;
    string caller   = 5;
    string abi      = 6;
    string exec     = 7;
    string expire   = 8;
    string paraName = 9;
}

message EvmContractTransferReq {
    string caller     = 1;
    float  amount     = 2;
    string exec       = 3;
    string expire     = 4;
    bool   isWithdraw = 5;
    string paraName   = 6;
}